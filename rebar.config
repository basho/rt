{erl_opts, [{parse_transform, lager_transform}]}.

{plugins, [
    {rebar3_hex, {git, "https://github.com/tsloughter/rebar3_hex", {tag, "v1.12.0"}}},
    {rebar_raw_resource,
        {git, "https://github.com/basho/rebar_raw_resource.git",
        {branch, "master"}}}
]}.

%% this repository tests against the latest version of riak in the develop
%% branch. The Erlang version with which tests are run is independent of the
%% current setup, the only restriction being that the current version of rebar3
%% supports only R16 onward. (tested R16-R21 on jun 26th by Gonçalo Tomás)
{deps, [
    %% override setup which is incompatible with rebar3
    {setup, "2.0.2"},
    {lucene_parser, {git, "https://github.com/goncalotomas/lucene_parser", {branch, "master"}}},
    {riak_search, {git, "https://github.com/goncalotomas/riak_search", {branch, "develop"}}},
    {riak, {raw, {git, "https://github.com/basho/riak", {branch, "develop"}}}},
    {rt, {git, "https://github.com/goncalotomas/rt_lib", {branch, "master"}}}
]}.

%% rebar3 profiles could allow us to test different riak versions. By
%% maintaining the same source files for the common test suites, we may run the
%% common battery of tests against any profile, OTOH we don't have a protocol
%% for test suites that target a specific riak version.
%% e.g. testing riak 2.2.5 can be done with the following command:
%% ./rebar3 as riak_225 ct
{profiles, [
    {riak_226, [
        {overrides, [
            {deps, [
                {riak, {raw, {git, "https://github.com/basho/riak", {tag, "riak-2.2.6"}}}}
            ]}
        ]}
    ]},
    {riak_225, [
        {overrides, [
            {deps, [
                {riak, {raw, {git, "https://github.com/basho/riak", {tag, "riak-2.2.5"}}}}
            ]}
        ]}
    ]},
    {riak_224, [
        {overrides, [
            {deps, [
                {riak, {raw, {git, "https://github.com/basho/riak", {tag, "riak-2.2.4"}}}}
            ]}
        ]}
    ]},
    {riak_223, [
        {overrides, [
            {deps, [
                {riak, {raw, {git, "https://github.com/basho/riak", {tag, "riak-2.2.3"}}}}
            ]}
        ]}
    ]}
]}.

%% hooks are supported only by rebar3 - so using it is imperative to fix RT.
%% TODO use rebar3 provider hooks to run tasks before and after the 'ct'.
%% pre_ct_hook: sets up a valid environment by compiling riak as a dependency,
%% generating a release and creating an appropriate directory tree to use
%% multiple nodes.
%% It may be easier to manage the files for multiple riak nodes by copying the
%% generated release and associated folders.
%% The Common Test suites may assume a valid directory structure and may use it
%% to run any tests required. Still unsure about necessary configuration that
%% is specific to certain tests (perhaps on init_per_suite for that suite...?)
%% post_ct_hook: performs a teardown of all riak node folders and leaves behind
%% a clean directory tree.
%% NOTE: currently there is a caveat with this approach: the post_hooks is not
%% being run if the CT suites fail!
{pre_hooks, [
    % {ct, "./scripts/setup"}
]}.

{post_hooks, [
    {compile, "./scripts/gen_release"},
    {ct, "./scripts/teardown"}
]}.
